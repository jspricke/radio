#!/usr/bin/python3
#
# Python radio streamer
#
# Copyright (C) 2008-03-17  Jochen Sprickerhof
# Copyright (C) 2008-2019  Jochen Sprickerhof
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
"""Python radio streamer"""

from tuner import Station, Stations, main


class Radio(Stations):
    def __init__(self):
        self.header = [
            ' _',
            '|_)  _   _| o  _',
            '| \\ (_| (_| | (_)',
        ]

        def bremenvier(self):
            text = self.getsitere('http://www.radiobremen.de/bremenvier/includes/mediabox.inc.php?c=onair',
                                  r'<sendung>(.*)</sendung>(?:.|\s)*<jetzt>(.*): (.*)</jetzt>')
            if not text:
                return ''
            return self.del_comma(text[1]) + ' - ' + text[2] + ' (' + text[0] + ')'

        def einslive(self):
            text = self.getsitere('http://www.einslive.de/radiotext/RADIOTXT.TXT')
            if not text:
                return ''
            einsliveDict = {
                'Ihr hoert': '',
                'mit 1LIVE': '',
                '1LIVE': '',
                '1live': '',
                '&#x0022;': '"',
                ':': '-',
                '*': '',
                'mit': '-',
            }
            text = self.replaceDict(text, einsliveDict)
            if text.count('"') == 1:
                text = text.replace('- "', ' - ')
                text = text.replace('"', '')
            elif text.count('"') > 1:
                title = text[text.find('"') + 1:text.rfind('"')]
                interpret = text[:text.find('"')] + text[text.rfind('"') + 1:]
                interpret = interpret.replace('-', '')
                text = interpret + ' - ' + title
            return text

        def deutschlandfunk(self):
            text = self.getsitere('http://www.deutschlandradio.de/jetzt-im-radio.261.de.html',
                                  r'Deutschlandfunk.*(?:<[^>]*>){7}[^<]*(?:<[^>]*>){5}([^<]*)(?:<[^>]*>){5}([^<]*)')
            if not text:
                return ''
            return text[0] + ' - ' + text[1]

        def dradio(self):
            text = self.getsitere('http://www.deutschlandradio.de/jetzt-im-radio.261.de.html',
                                  r'Deutschlandfunk Kultur.*(?:<[^>]*>){7}[^<]*(?:<[^>]*>){5}([^<]*)(?:<[^>]*>){5}([^<]*)')
            if not text:
                return ''
            return text[0] + ' - ' + text[1]

        def lounge_radio(self):
            text = self.getsitere('http://www.lounge-radio.com/code/pushed_files/now.html',
                                  r'Artist:.*\n.*<div>(.*)</div>.*\n(?:.*\n){2}.*Track:.*\n.*<div>(.*)</div>')
            if not text:
                return ''
            return text[0] + ' - ' + text[1]

        def bremenzwei(self):
            text = self.getsitere('http://www.radiobremen.de/extranet/playlist/nowplaying_nwr.xml',
                                  r'<strong>(.*)</strong>.*\n.*Titel: "(.*)"<br />\nVon: (.*)</p>|<strong>(.*)</strong>')
            if not text:
                return ''
            if text[0]:
                return text[1] + ' - ' + self.del_comma(text[2]) + ' (' + text[0] + ')'
            return text[3]

        def tsf_jazz(self):
            text = self.getsitere('http://www.tsfjazz.com/getSongInformations.php')
            if not text:
                return ''
            text = text.replace('|', ' - ')
            return text

        self['a'] = Station('Byte.fm', 'http://www.byte.fm/stream/bytefm.m3u')
        self['b'] = Station('Bremen 4', 'http://httpmedia.radiobremen.de/bremenvier.m3u', bremenvier)
        self['c'] = Station('Cosmo', 'https://wdr-cosmo-live.icecastssl.wdr.de/wdr/cosmo/live/mp3/128/stream.mp3')
        self['d'] = Station('Deutschlandfunk', 'http://www.dradio.de/streaming/dlf_hq_ogg.m3u', deutschlandfunk)
        self['e'] = Station('1 Live', 'http://www.wdr.de/wdrlive/media/einslive.m3u', einslive)
        self['f'] = Station('Dfunk Nova', 'http://st03.dlf.de/dlf/03/128/mp3/stream.mp3')
        self['g'] = Station('Das Ding', 'http://mp3-live.dasding.de/dasding_m.m3u')
        self['h'] = Station('Fritz', 'https://rbb-fritz-live.sslcast.addradio.de/rbb/fritz/live/mp3/128/stream.mp3')
        self['i'] = Station('NDR Info', 'http://www.ndr.de/resources/metadaten/audio/m3u/ndrinfo.m3u')
        self['j'] = Station('Jazzradio', 'https://streaming.radio.co/s774887f7b/listen')
        self['k'] = Station('Dradio Kultur', 'http://www.dradio.de/streaming/dkultur_hq_ogg.m3u', dradio)
        self['l'] = Station('1 Live diggi', 'http://www.wdr.de/wdrlive/media/einslivedigi.m3u')
        self['m'] = Station('Smooth Jazz', 'http://smoothjazz.com/streams/smoothjazz_128.pls')
        self['n'] = Station('Bremen Zwei', 'http://dl-ondemand.radiobremen.de/bremenzwei.m3u', bremenzwei)
        self['o'] = Station('Groove FM', 'http://stream.groovefm.de:10028/listen.pls')
        self['p'] = Station('Radio Swiss Pop', 'http://www.radioswisspop.ch/live/mp3.m3u')
        self['q'] = Station('Bremen Zwei Sounds', 'http://webchannel.radiobremen.de:8000/bremenzwei-sounds.m3u')
        self['r'] = Station('Swiss Radio Jazz', 'http://relay.publicdomainproject.org/modern_jazz.aac.m3u')
        self['s'] = Station('NDR Blue', 'http://www.ndr.de/resources/metadaten/audio/m3u/ndrblue.m3u')
        self['t'] = Station('TSF Jazz', 'http://statslive.infomaniak.ch/playlist/tsfjazz/tsfjazz-high.mp3/playlist.pls', tsf_jazz)
        self['u'] = Station('BBC World Service', 'http://bbcwssc.ic.llnwd.net/stream/bbcwssc_mp1_ws-einws')
        self['v'] = Station('Lounge Radio', 'http://www.lounge-radio.com/listen128.m3u', lounge_radio)
        self['w'] = Station('WDR 5', 'http://www.wdr.de/wdrlive/media/wdr5.m3u')
        self['x'] = Station('Swiss Groove', 'http://swissgroove.com/listen.php?player=pls')
        self['y'] = Station('N-Joy', 'https://ndr-njoy-live.sslcast.addradio.de/ndr/njoy/live/mp3/128/stream.mp3')
        self['z'] = Station('Radio Swiss Jazz', 'http://www.radioswissjazz.ch/live/mp3.m3u')


if __name__ == '__main__':
    main(Radio())
